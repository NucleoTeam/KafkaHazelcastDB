plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'jacoco'
}

group = 'com.nucleodb'
version = '1.15.1'

repositories {
    mavenCentral()
    maven {
        name = 'SynloadRepo'
        url = uri("https://nexus.synload.com/repository/maven-repo-releases/")
        credentials {
            username = System.getenv("SYNLOAD_REPO_USER")
            password = System.getenv("SYNLOAD_REPO_PASS")
        }
    }
}
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(19)
    }
}
compileJava {
    options.release = 19
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    environment "TEST2", "CHECK"
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

dependencies {
    api group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.2.3'
    api group: 'org.apache.kafka', name: 'kafka-clients', version: '2.1.0'
    api group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.2'
    api group: 'net.sf.supercsv', name: 'super-csv-java8', version: '2.4.0'
    api 'com.github.f4b6a3:uuid-creator:4.5.0'
    api 'com.google.guava:guava:28.1-jre'
    api 'org.reflections:reflections:0.10.2'
    api 'com.github.java-json-tools:json-patch:1.13'
    api 'org.glassfish:javax.json:1.1.4'
    api group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    api 'org.dizitart:nitrite:3.4.3'
    api group: 'com.fasterxml.jackson.datatype', name:'jackson-datatype-jsr310', version:'2.15.2'
    api 'com.github.jsqlparser:jsqlparser:4.6'

    dependencies {
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier.set('sources')
}
task javadocJar(type: Jar) {
    from javadoc.destinationDir
    archiveClassifier.set('javadoc')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar
            artifact javadocJar

            pom.withXml {
                asNode().dependencies.'*'.findAll() {
                    it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                        dep.name == it.artifactId.text()
                    }
                }.each() {
                    it.scope*.value = 'compile'
                }
            }
        }
    }
    repositories {
        maven {
            name = 'SynloadRepo'
            url = uri("https://nexus.synload.com/repository/maven-repo-releases/")
            credentials {
                username = System.getenv("SYNLOAD_REPO_USER")
                password = System.getenv("SYNLOAD_REPO_PASS")
            }
        }
    }
}
